!function(e){var n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(r,a,function(n){return e[n]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=7)}([function(e,n){e.exports=require("tslib")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.handleError=n.ErrorHandler=void 0;class r extends Error{constructor(e,n){super(),this.statusCode=e,this.message=n}}n.ErrorHandler=r,n.handleError=(e,n)=>{const{message:t}=e,r=e.statusCode?e.statusCode:500;n.status(r).json({status:"error",statusCode:r,message:t})}},function(e,n){e.exports=require("mongoose")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createTransactionSchema=n.createUserSchema=n.transactionStatus=void 0;const r=t(0).__importDefault(t(15));n.transactionStatus={confirmed:"confirmed",unconfirmed:"unconfirmed"},n.createUserSchema=r.default.object().keys({document:r.default.string().required(),name:r.default.string().required(),lastName:r.default.string().required(),email:r.default.string().email().required(),phone:r.default.string().required()}),n.createTransactionSchema=r.default.object().keys({document:r.default.string().required(),phone:r.default.string().required(),value:r.default.number().min(1).required()})},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.updateUserSvc=n.findUserSvc=n.createUserSvc=void 0;const r=t(0),a=t(5);n.createUserSvc=e=>r.__awaiter(void 0,void 0,void 0,(function*(){try{return yield a.createUser(e)}catch(e){throw console.error("TCL: createUserSvc -> e",e),e}})),n.findUserSvc=(e,n={},t={})=>r.__awaiter(void 0,void 0,void 0,(function*(){try{return yield a.findUser(e,n,t)}catch(e){throw console.error("TCL: findUserSvc -> e",e),e}})),n.updateUserSvc=(e,n={},t={})=>r.__awaiter(void 0,void 0,void 0,(function*(){try{return yield a.updateUser(e,n,t)}catch(e){throw console.error("TCL: updateUserSvc -> e",e),e}}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.updateUser=n.findUser=n.createUser=void 0;const r=t(0),a=t(6),o=t(1);n.createUser=e=>r.__awaiter(void 0,void 0,void 0,(function*(){try{return yield a.UserModel.create(e)}catch(e){throw console.log(e),new o.ErrorHandler(500,`${e.name} ${e.message}`)}})),n.findUser=(e,n={},t={})=>r.__awaiter(void 0,void 0,void 0,(function*(){try{return a.UserModel.findOne(e,n,t)}catch(e){throw console.error("TCL: findUser -> error",e),e.statusCode?e:new o.ErrorHandler(500,`${e.name} ${e.errmsg}`)}})),n.updateUser=(e,n={},t={})=>r.__awaiter(void 0,void 0,void 0,(function*(){try{return a.UserModel.findOneAndUpdate(e,n,t)}catch(e){throw e.statusCode?e:new o.ErrorHandler(500,`${e.name} ${e.errmsg}`)}}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.UserModel=void 0;const r=t(2),a=new r.Schema({document:{type:String,unique:!0},name:{type:String},lastName:{type:String},email:{type:String,unique:!0},phone:{type:String,unique:!0},balance:{type:Number},transactions:[{type:r.Schema.Types.ObjectId,ref:"Transaction"}]},{timestamps:!0,versionKey:!1});n.UserModel=r.model("User",a,"user")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(0);t(8);r.__importDefault(t(11));const a=r.__importDefault(t(12));t(13);const o=r.__importDefault(t(2)),s=t(14),i=t(16),c=t(17),u=t(18),d=t(31),l=a.default(),p=process.env.DB;l.use(a.default.raw({type:function(){return!0},limit:"5mb"})),l.use("/soap/user",c.soap({services:s.UserService,wsdl:i.UserXml})),l.use("/soap/transaction",c.soap({services:u.TransactionService,wsdl:d.TransacionXml})),o.default.connect(p,{useNewUrlParser:!0,useFindAndModify:!1,useUnifiedTopology:!0}).then(()=>{const e=Number(process.env.PORT||3e3);l.listen(e,()=>{console.log("Server initialized on port "+e)})}).catch(()=>console.log("database connection failed")),n.default=l},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(0),a=r.__importStar(t(9)),o=r.__importDefault(t(10)).default([{name:"env",alias:"e",defaultValue:"development",type:String}]),s=a.config({path:`./env/${o.env}.env`});if(s.error)throw s.error},function(e,n){e.exports=require("dotenv")},function(e,n){e.exports=require("command-line-args")},function(e,n){e.exports=require("morgan")},function(e,n){e.exports=require("express")},function(e,n){e.exports=require("express-async-errors")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.UserService=void 0;const r=t(0),a=t(4),o=t(3),s=t(1);n.UserService={User_Service:{User_Port:{createUser:function(e,n){return r.__awaiter(this,void 0,void 0,(function*(){try{if(e.auth_token.$value!=process.env.SOAP_AUTH_TOKEN)throw new s.ErrorHandler(401,"UNAUTHORIZED");const n={document:e.document.$value,name:e.name.$value,lastName:e.lastName.$value,email:e.email.$value,phone:e.phone.$value};yield o.createUserSchema.validateAsync(n),n.balance=0;const t=yield a.createUserSvc(n);return{user:{id:t.id,document:t.document,name:t.name,lastName:t.lastName,email:t.email,phone:t.phone},message:"done"}}catch(e){n({Fault:{error:e.message,statusCode:e.statusCode?e.statusCode:500}})}}))},rechargeWallet:function(e,n){return r.__awaiter(this,void 0,void 0,(function*(){try{const n={document:e.document.$value,phone:e.phone.$value},t={$inc:{balance:e.value.$value}},r={new:!0};if(e.auth_token.$value!=process.env.SOAP_AUTH_TOKEN)throw new s.ErrorHandler(401,"UNAUTHORIZED");const o=yield a.updateUserSvc(n,t,r);if(!o)throw new s.ErrorHandler(404,"User not found");return{balance:o.balance,message:"wallet recharged successfully"}}catch(e){n({Fault:{error:e.message,statusCode:e.statusCode?e.statusCode:500}})}}))},consultWallet:function(e,n){return r.__awaiter(this,void 0,void 0,(function*(){const t={document:e.document.$value,phone:e.phone.$value};try{if(e.auth_token.$value!=process.env.SOAP_AUTH_TOKEN)throw new s.ErrorHandler(401,"UNAUTHORIZED");const n=yield a.findUserSvc(t,"balance");if(!n)throw new s.ErrorHandler(404,"User not found");return{balance:n.balance,message:"wallet balance retrieve successfully"}}catch(e){n({Fault:{error:e.message,statusCode:e.statusCode?e.statusCode:500}})}}))}}}}},function(e,n){e.exports=require("@hapi/joi")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.UserXml=void 0,n.UserXml='<definitions name = "UserService"\ntargetNamespace = "http://www.examples.com/wsdl/UserService.wsdl"\nxmlns = "http://schemas.xmlsoap.org/wsdl/"\nxmlns:soap = "http://schemas.xmlsoap.org/wsdl/soap/"\nxmlns:tns = "http://www.examples.com/wsdl/UserService.wsdl"\nxmlns:xsd = "http://www.w3.org/2001/XMLSchema">\n\n<message name = "CreateUserRequest">\n   <part name = "document" type = "xsd:string"/>\n   <part name = "name" type = "xsd:string"/>\n   <part name = "lastName" type = "xsd:string"/>\n   <part name = "email" type = "xsd:string"/>\n   <part name = "phone" type = "xsd:string"/>\n   <part name = "auth_token" type = "xsd:string"/>\n</message>\n \n<message name = "CreateUserResponse">\n   <part name = "name" type = "xsd:string"/>\n   <part name = "name" type = "xsd:string"/>\n   <part name = "lastName" type = "xsd:string"/>\n   <part name = "email" type = "xsd:string"/>\n   <part name = "phone" type = "xsd:string"/>\n</message>\n\n<message name = "RechargeWalletRequest">\n   <part name = "document" type = "xsd:string"/>\n   <part name = "phone" type = "xsd:string"/>\n   <part name = "value" type = "xsd:number"/>\n   <part name = "auth_token" type = "xsd:string"/>\n</message>\n \n<message name = "RechargeWalletResponse">\n   <part name = "balance" type = "xsd:number"/>\n</message>\n\n<message name = "ConsultWalletRequest">\n   <part name = "document" type = "xsd:string"/>\n   <part name = "phone" type = "xsd:string"/>\n   <part name = "auth_token" type = "xsd:string"/>\n</message>\n\n<message name = "ConsultWalletResponse">\n   <part name = "balance" type = "xsd:number"/>\n</message>\n\n<portType name = "User_PortType">\n   <operation name = "createUser">\n      <input message = "tns:CreateUserRequest"/>\n      <output message = "tns:CreateUserResponse"/>\n   </operation>\n   <operation name = "rechargeWallet">\n      <input message = "tns:RechargeWalletRequest"/>\n      <output message = "tns:RechargeWalletResponse"/>\n   </operation>\n   <operation name = "consultWallet">\n      <input message = "tns:ConsultWalletRequest"/>\n      <output message = "tns:ConsultWalletResponse"/>\n   </operation>\n</portType>\n\n<binding name = "User_Binding" type = "tns:User_PortType">\n   <soap:binding style = "rpc"\n      transport = "http://schemas.xmlsoap.org/soap/http"/>\n   <operation name = "createUser">\n      <soap:operation soapAction = "createUser"/>\n      <input>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:userservice"\n            use = "encoded"/>\n      </input>\n     \n      <output>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:userservice"\n            use = "encoded"/>\n      </output>\n   </operation>\n   <operation name = "rechargeWallet">\n      <soap:operation soapAction = "rechargeWallet"/>\n      <input>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:userservice"\n            use = "encoded"/>\n      </input>\n     \n      <output>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:userservice"\n            use = "encoded"/>\n      </output>\n   </operation>\n   <operation name = "consultWallet">\n      <soap:operation soapAction = "consultWallet"/>\n      <input>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:userservice"\n            use = "encoded"/>\n      </input>\n     \n      <output>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:userservice"\n            use = "encoded"/>\n      </output>\n   </operation>\n</binding>\n\n<service name = "User_Service">\n   <documentation>WSDL File for UserService</documentation>\n   <port binding = "tns:User_Binding" name = "User_Port">\n      <soap:address\n         location = "http://www.examples.com/UserService/" />\n   </port>\n</service>\n</definitions>'},function(e,n){e.exports=require("express-soap")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.TransactionService=void 0;const r=t(0),a=t(3),o=t(19),s=t(1);n.TransactionService={Transaction_Service:{Transaction_Port:{createTransaction:function(e,n){return r.__awaiter(this,void 0,void 0,(function*(){try{const n={document:e.document.$value,phone:e.phone.$value},t=e.value.$value;if(e.auth_token.$value!=process.env.SOAP_AUTH_TOKEN)throw new s.ErrorHandler(401,"UNAUTHORIZED");yield a.createTransactionSchema.validateAsync(Object.assign(Object.assign({},n),{value:t}));return{session_id:yield o.createTransactionSvc(n,t),message:"Confirmation token sended to your email"}}catch(e){n({Fault:{error:e.message,statusCode:e.statusCode?e.statusCode:500}})}}))},confirmTransaction:function(e,n){return r.__awaiter(this,void 0,void 0,(function*(){const t=e.session_id.$value,r=e.token.$value;try{if(e.auth_token.$value!=process.env.SOAP_AUTH_TOKEN)throw new s.ErrorHandler(401,"UNAUTHORIZED");return yield o.confirmTransactionSvc(t,r),{message:"Transaction confirmed"}}catch(e){n({Fault:{error:e.message,statusCode:e.statusCode?e.statusCode:500}})}}))}}}}},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.confirmTransactionSvc=n.createTransactionSvc=void 0;const r=t(0),a=r.__importDefault(t(20)),o=t(4),s=t(1),i=r.__importDefault(t(22)),c=t(3),u=t(23),d=t(25),l=t(27),p=t(29),m=r.__importDefault(t(30)),f=t(5);n.createTransactionSvc=(e,n)=>r.__awaiter(void 0,void 0,void 0,(function*(){try{const t=yield o.findUserSvc(e);if(!t)throw new s.ErrorHandler(404,"User not found");if(n>t.balance)throw new s.ErrorHandler(500,"Insufficient funds");const r=i.default.pseudoRandomBytes(3).toString("hex"),p={user:t.id,value:n,token:r,status:c.transactionStatus.unconfirmed},m=yield u.createTransaction(p);if(!m)throw new s.ErrorHandler(500,"Unexpected error while trying to create the transaction");const f=yield d.jwtSign({_id:m.id,user:m.user,value:m.value});return a.default.info("token : "+r),yield l.sendEmail(p.value,r,t.email),f}catch(e){throw a.default.error("TCL: createTransactionSvc -> e",e),e}})),n.confirmTransactionSvc=(e,n)=>r.__awaiter(void 0,void 0,void 0,(function*(){try{const t=yield d.jwtVerify(e);if(!p.has(t,"exp")||m.default().unix()>=p.get(t,"exp"))throw new s.ErrorHandler(401,"UNAUTHORIZED");console.log(t);const r={_id:t._id,user:t.user,value:t.value},a=yield o.findUserSvc({_id:r.user});if(!a)throw new s.ErrorHandler(404,"User not found");const i=yield u.findTransaction({_id:r._id});if(!i)throw new s.ErrorHandler(500,"Transaction not found");if(!i.token)throw new s.ErrorHandler(500,"Transaction already confirmed");if(i.token!=n)throw new s.ErrorHandler(401,"UNAUTHORIZED");if(i.value>a.balance)throw new s.ErrorHandler(500,"Insufficient funds");return yield u.updateTransaction({_id:i.id},{status:c.transactionStatus.confirmed,$unset:{token:n}}),yield f.updateUser({_id:r.user},{$inc:{balance:-i.value}}),"Transaction confirmed"}catch(e){throw a.default.error("TCL: createTransactionSvc -> e",e),e}}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(21),{File:a,Console:o}=r.transports,s=r.createLogger({level:"info"});{const e=r.format.combine(r.format.timestamp(),r.format.json()),n=new a({filename:"./logs/error.log",format:e,level:"error"}),t=new a({filename:"./logs/combined.log",format:e});s.add(n),s.add(t)}n.default=s},function(e,n){e.exports=require("winston")},function(e,n){e.exports=require("crypto")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.updateTransaction=n.findTransaction=n.createTransaction=void 0;const r=t(0),a=t(24),o=t(1),s=t(6);n.createTransaction=e=>r.__awaiter(void 0,void 0,void 0,(function*(){try{const n=yield a.TransactionModel.create(e);return yield s.UserModel.findByIdAndUpdate(e.user,{$push:{transactions:n.id}}),n}catch(e){throw new o.ErrorHandler(500,`${e.name} ${e.message}`)}})),n.findTransaction=(e,n={},t={})=>r.__awaiter(void 0,void 0,void 0,(function*(){try{return a.TransactionModel.findOne(e,n,t)}catch(e){throw console.error("TCL: findUser -> error",e),e.statusCode?e:new o.ErrorHandler(500,`${e.name} ${e.errmsg}`)}})),n.updateTransaction=(e,n={},t={})=>r.__awaiter(void 0,void 0,void 0,(function*(){try{return a.TransactionModel.findOneAndUpdate(e,n,t)}catch(e){throw e.statusCode?e:new o.ErrorHandler(500,`${e.name} ${e.errmsg}`)}}))},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.TransactionModel=void 0;const r=t(2),a=new r.Schema({user:{type:r.Schema.Types.ObjectId,ref:"User"},value:{type:Number},token:{type:String},status:{type:String}},{timestamps:!0,versionKey:!1});n.TransactionModel=r.model("Transaction",a,"transaction")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.jwtDecode=n.jwtVerify=n.jwtSign=void 0;const r=t(0),a=r.__importDefault(t(26)),o=t(1);n.jwtSign=e=>r.__awaiter(void 0,void 0,void 0,(function*(){const n={algorithm:process.env.JWT_OPTIONS_ALGORITHM||"",expiresIn:process.env.JWT_OPTIONS_EXPIRESIN,issuer:process.env.JWT_OPTIONS_ISSUER,audience:process.env.JWT_OPTIONS_AUDIENCE};let t=process.env.JWT_PRIVATE_KEY||"";return t&&(t=t.replace(/\\n/g,"\n")),a.default.sign(e,t,n)})),n.jwtVerify=e=>r.__awaiter(void 0,void 0,void 0,(function*(){try{let n=process.env.JWT_PUBLIC_KEY||"";return n&&(n=n.replace(/\\n/g,"\n")),a.default.verify(e,n)}catch(e){throw new o.ErrorHandler(401,"UNAUTHORIZED")}})),n.jwtDecode=e=>r.__awaiter(void 0,void 0,void 0,(function*(){return a.default.decode(e,{json:!0})}))},function(e,n){e.exports=require("jsonwebtoken")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.sendEmail=void 0;const r=t(0),a=r.__importDefault(t(28));n.sendEmail=(e,n,t="example@example.com")=>r.__awaiter(void 0,void 0,void 0,(function*(){const r=a.default.createTransport({host:"smtp.mailtrap.io",port:2525,auth:{user:"650b340ea0d499",pass:"17e691218039b1"}}),o={from:'"Epayco Team" <from@epayco.com>',to:t,subject:"Confirm Transaction",text:"Hey there, pls confim your transaction ",html:`<h1>Hey there! </h1>\n        <h2> Please confirm your transaction<h2>\n        <span>Amount: ${e}<span><br>Token : ${n}`};r.sendMail(o,(e,n)=>{if(e)return console.log(e);console.log("Message sent: %s",n.messageId)})}))},function(e,n){e.exports=require("nodemailer")},function(e,n){e.exports=require("lodash")},function(e,n){e.exports=require("moment")},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.TransacionXml=void 0,n.TransacionXml='<definitions name = "TransacionService"\ntargetNamespace = "http://www.examples.com/wsdl/UserService.wsdl"\nxmlns = "http://schemas.xmlsoap.org/wsdl/"\nxmlns:soap = "http://schemas.xmlsoap.org/wsdl/soap/"\nxmlns:tns = "http://www.examples.com/wsdl/UserService.wsdl"\nxmlns:xsd = "http://www.w3.org/2001/XMLSchema">\n\n<message name = "CreateTransactionRequest">\n   <part name = "document" type = "xsd:string"/>\n   <part name = "phone" type = "xsd:string"/>\n   <part name = "value" type = "xsd:number"/>\n   <part name = "auth_token" type = "xsd:string"/>\n</message>\n \n<message name = "CreateTransactionResponse">\n   <part name = "session_id" type = "xsd:string"/>\n</message>\n\n<message name = "ConfirmTransactionRequest">\n   <part name = "session_id" type = "xsd:string"/>\n   <part name = "token" type = "xsd:string"/>\n   <part name = "auth_token" type = "xsd:string"/>\n</message>\n \n<message name = "ConfirmTransactionResponse">\n   <part name = "message" type = "xsd:string"/>\n</message>\n\n<portType name = "Transaction_PortType">\n   <operation name = "createTransaction">\n      <input message = "tns:CreateTransactionRequest"/>\n      <output message = "tns:CreateTransactionResponse"/>\n   </operation>\n   <operation name = "confirmTransaction">\n      <input message = "tns:ConfirmTransactionRequest"/>\n      <output message = "tns:ConfirmTransactionResponse"/>\n   </operation>\n</portType>\n\n<binding name = "Transaction_Binding" type = "tns:Transaction_PortType">\n   <soap:binding style = "rpc"\n      transport = "http://schemas.xmlsoap.org/soap/http"/>\n   <operation name = "createTransaction">\n      <soap:operation soapAction = "createTransaction"/>\n      <input>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:transactionservice"\n            use = "encoded"/>\n      </input>\n     \n      <output>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:transactionservice"\n            use = "encoded"/>\n      </output>\n   </operation>\n   <operation name = "confirmTransaction">\n      <soap:operation soapAction = "confirmTransaction"/>\n      <input>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:transactionservice"\n            use = "encoded"/>\n      </input>\n     \n      <output>\n         <soap:body\n            encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/"\n            namespace = "urn:examples:transactionservice"\n            use = "encoded"/>\n      </output>\n   </operation>\n</binding>\n\n<service name = "Transaction_Service">\n   <documentation>WSDL File for UserService</documentation>\n   <port binding = "tns:Transaction_Binding" name = "Transaction_Port">\n      <soap:address\n         location = "http://www.examples.com/TransactionService/" />\n   </port>\n</service>\n</definitions>'}]);